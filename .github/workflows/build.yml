name: SonarQube Cloud

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze Flutter project
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cirruslabs/flutter:stable

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Install dependencies
        run: flutter pub get

      - name: Analyze code
        run: flutter analyze .

      # ðŸ”¹ Ejecutar pruebas y generar reporte de cobertura
      - name: Run tests with coverage
        run: flutter test --coverage

      # ðŸ”¹ Verificar que el archivo `lcov.info` se generÃ³
      - name: Check coverage file
        run: ls -lh coverage/lcov.info

      # ðŸ”¹ Descargar y ejecutar SonarScanner
      - name: Download sonar-scanner
        run: |
          curl --create-dirs -sSLo $HOME/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-6.2.1.4610-linux-x64.zip
          unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/

      # ðŸ”¹ Ejecutar anÃ¡lisis de SonarCloud con cobertura
      - name: Run SonarScanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          $HOME/.sonar/sonar-scanner-6.2.1.4610-linux-x64/bin/sonar-scanner \
            -Dsonar.coverageReportPaths=coverage/lcov.info